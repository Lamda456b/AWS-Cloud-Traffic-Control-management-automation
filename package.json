{
  "name": "aws-traffic-controller",
  "version": "1.0.0",
  "description": "Production-ready AWS traffic management system with natural language processing and real-time monitoring",
  "main": "traffic_controller.py",
  "scripts": {
    "start": "python traffic_controller.py api",
    "dev": "python traffic_controller.py dev",
    "cli": "python traffic_controller.py"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Lamda456b/AWS-Cloud-Traffic-Control-management-automation.git"
  },
  "keywords": [
    "aws",
    "traffic-management",
    "load-balancer",
    "health-monitoring",
    "auto-scaling",
    "infrastructure",
    "devops",
    "natural-language",
    "flask-api"
  ],
  "author": "Your Name",
  "license": "MIT",
  "dependencies": {
    "flask": ">=2.0.0",
    "flask-cors": ">=3.0.0",
    "requests": ">=2.25.0",
    "boto3": ">=1.20.0"
  },
  "python_requires": ">=3.7",
  "files": [
    "traffic_controller.py",
    "requirements.txt",
    "README.md",
    "LICENSE",
    "config.json.example",
    "docker-compose.yml"
  ],
  "installation": {
    "quick_start": [
      "git clone https://github.com/Lamda456b/AWS-Cloud-Traffic-Control-management-automation.git",
      "cd aws-traffic-controller",
      "pip install -r requirements.txt",
      "python traffic_controller.py api"
    ],
    "docker": [
      "docker-compose up -d"
    ]
  },
  "features": [
    "Natural language command processing",
    "Real-time health monitoring",
    "Automatic failover",
    "Traffic routing and load balancing",
    "Auto-scaling integration",
    "Web dashboard with live updates",
    "RESTful API",
    "AWS integration (ELB, Route53, CloudWatch)",
    "Mock mode for testing"
  ],
  "api_endpoints": {
    "dashboard": "GET /",
    "process_command": "POST /api/command",
    "system_status": "GET /api/status",
    "target_status": "GET /api/status/<target>",
    "recommendations": "GET /api/recommendations",
    "health_check": "GET /api/health",
    "metrics": "GET /api/metrics",
    "alerts": "GET /api/alerts",
    "endpoints": "GET /api/endpoints"
  },
  "example_commands": [
    "check health of https://myapp.com every 30 seconds",
    "route 70% traffic from old-server to new-server",
    "scale up when cpu above 80%",
    "show status of myapp.com",
    "show status"
  ],
  "configuration": {
    "environment_variables": [
      "AWS_ACCESS_KEY_ID",
      "AWS_SECRET_ACCESS_KEY", 
      "AWS_DEFAULT_REGION"
    ],
    "default_port": 5000,
    "default_host": "0.0.0.0"
  },
  "release_info": {
    "tag_name": "v1.0.0",
    "release_title": "AWS Traffic Controller v1.0.0",
    "release_notes": "Initial production release with full AWS integration, natural language processing, and comprehensive monitoring capabilities.",
    "prerelease": false,
    "draft": false
  },
  "assets": [
    {
      "name": "aws-traffic-controller-v1.0.0.zip",
      "content_type": "application/zip"
    },
    {
      "name": "aws-traffic-controller-v1.0.0.tar.gz", 
      "content_type": "application/gzip"
    }
  ],
  "deployment": {
    "production": {
      "command": "python traffic_controller.py api 0.0.0.0 8080",
      "requirements": ["python>=3.7", "AWS credentials configured"]
    },
    "development": {
      "command": "python traffic_controller.py dev",
      "features": ["debug mode", "auto-reload", "mock AWS clients"]
    }
  }
}